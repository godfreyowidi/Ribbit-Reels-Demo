name: CI - Build, Migrate, and Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      sqlserver:
        image: mcr.microsoft.com/mssql/server:2019-latest
        env:
          SA_PASSWORD: Password123!
          ACCEPT_EULA: Y
        ports:
          - 1433:1433
        options: >-
          --health-cmd "echo 1"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 10

    env:
      GITHUB_ACTIONS: true
      CONNECTIONSTRINGS__DEFAULTCONNECTION: Server=sqlserver,1433;Database=RibbitReelsDb;User Id=sa;Password=Password123!;TrustServerCertificate=True
      JWT__KEY: ${{ secrets.JWT__KEY }}
      JWT__ISSUER: ${{ secrets.JWT__ISSUER }}
      JWT__AUDIENCE: ${{ secrets.JWT__AUDIENCE }}
      JWT__EXPIREMINUTES: ${{ secrets.JWT__EXPIREMINUTES }}
      GOOGLEAUTH__CLIENTID: ${{ secrets.GOOGLEAUTH__CLIENTID }}
      GOOGLEAUTH__CLIENTSECRET: ${{ secrets.GOOGLEAUTH__CLIENTSECRET }}
      AUTHENTICATION__TESTUSER__USERID: ${{ secrets.AUTHENTICATION__TESTUSER__USERID }}
      AUTHENTICATION__TESTUSER__EMAIL: ${{ secrets.AUTHENTICATION__TESTUSER__EMAIL }}
      AUTHENTICATION__TESTUSER__NAME: ${{ secrets.AUTHENTICATION__TESTUSER__NAME }}
      AUTHENTICATION__TESTUSER__ROLE: ${{ secrets.AUTHENTICATION__TESTUSER__ROLE }}

    steps:
      - name: 🛎️ Checkout code
        uses: actions/checkout@v3

      - name: 🧰 Setup .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: 📝 Create .env.ci file from secrets
        run: |
          echo "ConnectionStrings__DefaultConnection=Server=sqlserver,1433;Database=RibbitReelsDb;User Id=sa;Password=Password123!;TrustServerCertificate=True" >> .env.ci
          echo "JWT__KEY=${JWT__KEY}" >> .env.ci
          echo "JWT__ISSUER=${JWT__ISSUER}" >> .env.ci
          echo "JWT__AUDIENCE=${JWT__AUDIENCE}" >> .env.ci
          echo "JWT__EXPIREMINUTES=${JWT__EXPIREMINUTES}" >> .env.ci
          echo "GOOGLEAUTH__CLIENTID=${GOOGLEAUTH__CLIENTID}" >> .env.ci
          echo "GOOGLEAUTH__CLIENTSECRET=${GOOGLEAUTH__CLIENTSECRET}" >> .env.ci
          echo "AUTHENTICATION__TESTUSER__USERID=${AUTHENTICATION__TESTUSER__USERID}" >> .env.ci
          echo "AUTHENTICATION__TESTUSER__EMAIL=${AUTHENTICATION__TESTUSER__EMAIL}" >> .env.ci
          echo "AUTHENTICATION__TESTUSER__NAME=${AUTHENTICATION__TESTUSER__NAME}" >> .env.ci
          echo "AUTHENTICATION__TESTUSER__ROLE=${AUTHENTICATION__TESTUSER__ROLE}" >> .env.ci

      - name: 📦 Restore NuGet dependencies
        run: dotnet restore

      - name: 🛠️ Build solution
        run: dotnet build --no-restore --configuration Release

      - name: 🧰 Restore EF Core CLI Tool
        run: dotnet tool restore

      - name: 🕒 Wait for SQL Server to be ready
        run: |
          for i in {1..30}; do
            nc -z sqlserver 1433 && echo "SQL Server is ready!" && break
            echo "Waiting for SQL Server on port 1433... ($i)"
            sleep 5
          done

      - name: 🧬 Run EF Core Migrations
        run: dotnet tool run dotnet-ef database update --project ./RibbitReels.Data --startup-project ./RibbitReels.Api
        env:
          DOTNET_ENV_FILE: .env.ci
          DOTNET_ENVIRONMENT: Development

      - name: ✅ Run Unit and Integration Tests
        run: dotnet test --no-build --configuration Release
        env:
          DOTNET_ENV_FILE: .env.ci
          DOTNET_ENVIRONMENT: Development
